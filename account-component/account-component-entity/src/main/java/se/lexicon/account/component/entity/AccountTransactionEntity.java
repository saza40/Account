package se.lexicon.account.component.entity;

import com.gigaspaces.annotation.pojo.SpaceClass;
import com.gigaspaces.annotation.pojo.SpaceId;
import com.gigaspaces.annotation.pojo.SpaceRouting;
import se.lexicon.account.component.domain.Money;
import se.lexicon.account.component.domain.Phase;
import com.so4it.annotation.Allowed;
import com.so4it.common.util.object.Required;
import com.so4it.component.entity.AbstractEntityBuilder;
import com.so4it.component.entity.IdEntity;

import java.time.Instant;


@SpaceClass
public class AccountTransactionEntity extends IdEntity<String> {

    //The unique id
    @Allowed(value = "Auto generated by GS", types = {Allowed.Type.NULLABLE})
    private String id;

    private String arrangementId;

    private String batchId;

    private Instant insertionTimestamp;

    private String address;

    private Phase phase;

    private Money amount;

    private AccountTransactionEntity() {
    }

    private AccountTransactionEntity(Builder builder) {
        this.arrangementId = Required.notNull(builder.arrangementId, "arrangementId", builder.isTemplate());
        this.batchId = Required.notNull(builder.batchId, "batchId", builder.isTemplate());
        this.insertionTimestamp = Required.notNull(builder.insertionTimestamp, "insertionTimestamp", builder.isTemplate());
        this.address = Required.notNull(builder.address, "address", builder.isTemplate());
        this.phase = Required.notNull(builder.phase, "phase", builder.isTemplate());
        this.amount = Required.notNull(builder.amount, "amount", builder.isTemplate());

    }

    @Override
    @SpaceId(autoGenerate = true)
    public String getId() {
        return id;
    }

    public void setId(String id) {
        this.id = id;
    }

    @SpaceRouting
    public String getArrangementId() {
        return arrangementId;
    }

    private void setArrangementId(String arrangementId) {
        this.arrangementId = arrangementId;
    }

    public String getBatchId() {
        return batchId;
    }

    private void setBatchId(String batchId) {
        this.batchId = batchId;
    }

    public Instant getInsertionTimestamp() { return insertionTimestamp; }

    public void setInsertionTimestamp(Instant insertionTimestamp) { this.insertionTimestamp = insertionTimestamp; }

    public String getAddress() { return address; }

    public void setAddress(String address) { this.address = address; }

    public Phase getPhase() { return phase; }

    public void setPhase(Phase phase) { this.phase = phase; }

    public Money getAmount() { return amount; }

    public void setAmount(Money amount) { this.amount = amount; }

    public static Builder builder() {
        return new Builder(false);
    }

    public static Builder templateBuilder() {
        return new Builder(true);
    }


    public static class Builder extends AbstractEntityBuilder<AccountTransactionEntity> {

        private String id;

        private String arrangementId;

        private String batchId;

        private Instant insertionTimestamp;

        private String address;

        private Phase phase;

        private Money amount;

        public Builder(boolean template) {
            super(template);
        }

        public AccountTransactionEntity.Builder withId(String id) {
            this.id = id;
            return this;
        }

        public AccountTransactionEntity.Builder withArrangementId(String arrangementId) {
            this.arrangementId = arrangementId;
            return this;
        }

        public AccountTransactionEntity.Builder withBatchId(String batchId) {
            this.batchId = batchId;
            return this;
        }

        public AccountTransactionEntity.Builder withInsertionTimestamp(Instant insertionTimestamp) {
            this.insertionTimestamp = insertionTimestamp;
            return this;
        }

        public AccountTransactionEntity.Builder withAddress(String address) {
            this.address = address;
            return this;
        }

        public AccountTransactionEntity.Builder withPhase(Phase phase) {
            this.phase = phase;
            return this;
        }

        public AccountTransactionEntity.Builder withAmount(Money amount) {
            this.amount = amount;
            return this;
        }

        @Override
        public AccountTransactionEntity build() {
            return new AccountTransactionEntity(this);
        }
    }
}
